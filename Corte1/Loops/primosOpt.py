{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyN6nwbXLBHPzrgOEBetg4uQ"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"ngUq1DaVtQwL"},"outputs":[],"source":["#9) Imprimir los números primos existentes entre 0 y 30\n","tope_rango = 30\n","n=0\n","primo = True\n","while n < tope_rango:\n","    for div in range(2, n):\n","        if (n % div == 0):\n","            primo = False\n","    if primo:\n","        print(n)\n","    else:\n","        primo = True\n","    n += 1"]},{"cell_type":"code","source":["# 10) ¿Se puede mejorar el proceso del punto 9? Utilizar las sentencias break y/ó continue para tal fin\n","n=0\n","primo = True\n","while (n < tope_rango):\n","    for div in range(2, n):\n","        if (n % div == 0):\n","            primo = False\n","            break\n","    if primo:\n","        print(n)\n","    else: primo = True\n","    n += 1\n"],"metadata":{"id":"L9ohnqPUt1q7"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# 11) En los puntos 9 y 10, se diseño un código que encuentra números primos y además se lo optimizó. ¿Es posible saber en qué medida se optimizó?\n","ciclos_sin_break = 0\n","n = 0\n","primo = True\n","while (n < tope_rango):\n","    for div in range(2, n):\n","        ciclos_sin_break += 1\n","        if (n % div == 0):\n","            primo = False\n","    if primo:\n","        print(n)\n","    else:\n","        primo = True\n","    n += 1\n","print('Cantidad de ciclos: ' + str(ciclos_sin_break))\n","\n","ciclos_con_break = 0\n","n = 0\n","primo = True\n","while (n < tope_rango):\n","    for div in range(2, n):\n","        ciclos_con_break += 1\n","        if (n % div == 0):\n","            primo = False\n","            break\n","    if primo:\n","        print(n)\n","    else:\n","        primo = True\n","    n += 1\n","    print('Cantidad de ciclos: ' + str(ciclos_con_break))\n","print('Se optimizó a un ' + str(ciclos_con_break/ciclos_sin_break) + '% de ciclos aplicando break')"],"metadata":{"id":"hsK1RfTuuCI6"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# 12) Si la cantidad de números que se evalúa es mayor a treinta, esa optimización crece?\n","tope_rango=100\n","ciclos_sin_break = 0\n","n = 0\n","primo = True\n","while (n < tope_rango):\n","    for div in range(2, n):\n","        ciclos_sin_break += 1\n","        if (n % div == 0):\n","            primo = False\n","    if (primo):\n","        print(n)\n","    else:\n","        primo = True\n","    n += 1\n","print('Cantidad de ciclos: ' + str(ciclos_sin_break))\n","\n","ciclos_con_break = 0\n","n = 0\n","primo = True\n","while (n < tope_rango):\n","    for div in range(2, n):\n","        ciclos_con_break += 1\n","        if (n % div == 0):\n","            primo = False\n","            break\n","    if (primo):\n","        print(n)\n","    else:\n","        primo = True\n","    n += 1\n","print('Cantidad de ciclos: ' + str(ciclos_con_break))\n","print('Se optimizó a un ' + str(ciclos_con_break/ciclos_sin_break) + '% de ciclos aplicando break')"],"metadata":{"id":"56j7Yhfcu1lM"},"execution_count":null,"outputs":[]}]}