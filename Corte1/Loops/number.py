{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyP8JfIMBtMZ345R05LwNL2H"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":3,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":600},"id":"cdkJiA7Hmz3H","executionInfo":{"status":"ok","timestamp":1724674665529,"user_tz":300,"elapsed":2037,"user":{"displayName":"Samuel Garcia","userId":"00938556284740834143"}},"outputId":"d22e72f2-22e4-4339-9478-ec305ba48c91"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["<function matplotlib.pyplot.show(close=None, block=None)>"],"text/html":["<div style=\"max-width:800px; border: 1px solid var(--colab-border-color);\"><style>\n","      pre.function-repr-contents {\n","        overflow-x: auto;\n","        padding: 8px 12px;\n","        max-height: 500px;\n","      }\n","\n","      pre.function-repr-contents.function-repr-contents-collapsed {\n","        cursor: pointer;\n","        max-height: 100px;\n","      }\n","    </style>\n","    <pre style=\"white-space: initial; background:\n","         var(--colab-secondary-surface-color); padding: 8px 12px;\n","         border-bottom: 1px solid var(--colab-border-color);\"><b>matplotlib.pyplot.show</b><br/>def show(*args, **kwargs)</pre><pre class=\"function-repr-contents function-repr-contents-collapsed\" style=\"\"><a class=\"filepath\" style=\"display:none\" href=\"#\">/usr/local/lib/python3.10/dist-packages/matplotlib/pyplot.py</a>Display all open figures.\n","\n","Parameters\n","----------\n","block : bool, optional\n","    Whether to wait for all figures to be closed before returning.\n","\n","    If `True` block and run the GUI main loop until all figure windows\n","    are closed.\n","\n","    If `False` ensure that all figure windows are displayed and return\n","    immediately.  In this case, you are responsible for ensuring\n","    that the event loop is running to have responsive figures.\n","\n","    Defaults to True in non-interactive mode and to False in interactive\n","    mode (see `.pyplot.isinteractive`).\n","\n","See Also\n","--------\n","ion : Enable interactive mode, which shows / updates the figure after\n","      every plotting command, so that calling ``show()`` is not necessary.\n","ioff : Disable interactive mode.\n","savefig : Save the figure to an image file instead of showing it on screen.\n","\n","Notes\n","-----\n","**Saving figures to file and showing a window at the same time**\n","\n","If you want an image file as well as a user interface window, use\n","`.pyplot.savefig` before `.pyplot.show`. At the end of (a blocking)\n","``show()`` the figure is closed and thus unregistered from pyplot. Calling\n","`.pyplot.savefig` afterwards would save a new and thus empty figure. This\n","limitation of command order does not apply if the show is non-blocking or\n","if you keep a reference to the figure and use `.Figure.savefig`.\n","\n","**Auto-show in jupyter notebooks**\n","\n","The jupyter backends (activated via ``%matplotlib inline``,\n","``%matplotlib notebook``, or ``%matplotlib widget``), call ``show()`` at\n","the end of every cell by default. Thus, you usually don&#x27;t have to call it\n","explicitly there.</pre>\n","      <script>\n","      if (google.colab.kernel.accessAllowed && google.colab.files && google.colab.files.view) {\n","        for (const element of document.querySelectorAll('.filepath')) {\n","          element.style.display = 'block'\n","          element.onclick = (event) => {\n","            event.preventDefault();\n","            event.stopPropagation();\n","            google.colab.files.view(element.textContent, 401);\n","          };\n","        }\n","      }\n","      for (const element of document.querySelectorAll('.function-repr-contents')) {\n","        element.onclick = (event) => {\n","          event.preventDefault();\n","          event.stopPropagation();\n","          element.classList.toggle('function-repr-contents-collapsed');\n","        };\n","      }\n","      </script>\n","      </div>"]},"metadata":{},"execution_count":3},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"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\n"},"metadata":{}}],"source":["import random\n","from matplotlib import pyplot as plt\n","\n","numbers_a = range(1,13)\n","numbers_b = [random.randint(1, 1000)for i in range(12)]\n","plt.plot(numbers_a, numbers_b)\n","plt.show"]}]}